version: "3"
services:

  #redis
  redis:
    image: redis:6.2.0
    container_name: "${DOCKER_PREFIX}-redis"
    restart: always
    ports:
      - "6379:6379"
    networks:
      - test_network

  #php
  app:
    build:
      context: .
      dockerfile: ./docker/php-fpm/Dockerfile
    image: digitalocean.com/php
    container_name: "${DOCKER_PREFIX}-app"
    restart: always
    tty: true
    depends_on:
      - db
      - redis
    environment:
      SERVICE_NAME: app
      SERVICE_TAGS: dev
      REDIS_HOST: redis
    working_dir: /var/www
    user: "1000:1000"
    volumes:
      - ./:/var/www
      - ./docker/php-fpm/local.ini:/usr/local/etc/php/conf.d/php.ini
    networks:
      - test_network
  #mariadb
  db:
    image: mysql:8.0.15
    container_name: "${DOCKER_PREFIX}-db"
    restart: always
    tty: true
    command:
        --default-authentication-plugin=mysql_native_password
        --performance-schema --secure-file-priv=""
    ports:
        - "30306:3306"
    environment:
        MYSQL_DATABASE: ${DB_DATABASE}
        MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
        MYSQL_USER: ${DB_USERNAME}
        MYSQL_PASSWORD: ${DB_PASSWORD}
        SERVICE_TAGS: dev
        SERVICE_NAME: mysql
    volumes:
        - ./docker/db-data:/var/lib/mysql/
        - ./docker/mysql/my.cnf:/etc/mysql/my.cnf
    networks:
      - test_network
  # adminer
  adminer:
    image: adminer
    restart: always
    container_name: "${DOCKER_PREFIX}-adminer"
    environment:
      MYSQL_ROOT_PASSWORD: ${DB_PASSWORD}
    links:
      - db:db
    depends_on:
      - db
    ports:
      - 8081:8080
    networks:
      - test_network
  #nginx
  webserver:
    image: nginx:1.19.7-alpine
    container_name: "${DOCKER_PREFIX}-server"
    restart: always
    tty: true
    depends_on:
      - app
    ports:
      - "80:80"
    volumes:
      - ./:/var/www
      - ./docker/nginx/local.conf:/etc/nginx/conf.d/default.conf
    networks:
      - test_network
  # echo server
  echo:
    build:
      context: ./docker/echo
      args:
        - CHANGE_SOURCE=${CHANGE_SOURCE:-false}
    container_name: "${DOCKER_PREFIX}-echo"
    volumes:
      - ./docker/echo/laravel-echo-server.json:/app/laravel-echo-server.json:ro
    ports:
      - "${LARAVEL_ECHO_SERVER_PORT:-6001}:6001"
    links:
      - redis
    networks:
      - test_network

#networks
networks:
  test_network:
    driver: bridge
#volumes
volumes:
  dbdata:
    driver: local
